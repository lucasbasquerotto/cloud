- name: "{{ project_ctx_title }}"
  set_fact:
    project_ctx_base_dir_rel: >-
      {{ project_files_cloud_dir_rel }}/ctxs/{{ project_ctx_key }}
    project_ctx_base_dir: >-
      {{ project_files_cloud_dir }}/ctxs/{{ project_ctx_key }}
    project_ctx_secrets_dir: >-
      {{ project_secrets_cloud_dir }}/ctxs/{{ project_ctx_key }}
    project_ctx_path_map_repos: >-
      {{ project_env_init.path_params.path_map_repos | default({}) }}
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

# ctx - cloud repository

- name: "{{ project_ctx_title }} - cloud - repo (outer)"
  include_tasks: "tasks/util/repo.yml"
  vars:
    project_ctx_cloud_repo_key: "{{ project_ctx.repo }}"
    project_ctx_cloud_repo_dir: "{{ project_ctx_base_dir + '/repo' }}"
    project_ctx_path_cloud: >-
      {{
        project_ctx_path_map_repos[project_ctx_cloud_repo_key]
        | default('')
      }}
    repo_title: "{{ project_ctx_title }} - cloud - repo"
    repo_main: "{{ project_env.repos[project_ctx_cloud_repo_key] | default({}) }}"
    repo_ssh_src_dir: "{{ project_env_dir }}"
    repo_secrets_dir: "{{ project_ctx_secrets_dir }}"
    repo_default_dir: "{{ project_ctx_cloud_repo_dir }}"
    repo_dev_base_dir: "{{ project_dev_repos_dir }}"
    repo_dev_path: "{{ project_ctx_path_cloud }}"
    repo_dev: "{{ env_dev }}"
    repo_lax: "{{ env_lax }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_env_title }} - set_fact - project_ctx_cloud_repo_dir"
  set_fact:
    project_ctx_cloud_repo_dir: "{{ repo_dir }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_ctx_title }} - env repos (outer)"
  include_tasks: "tasks/util/repo.yml"
  vars:
    project_ctx_item_label: >-
      {{ project_ctx_item.dir | default('') }}
      ({{ project_ctx_item.repo | default('') }})
    project_ctx_path_cloud_ext_repo: >-
      {{
        project_ctx_path_map_repos[project_ctx_item.repo | default('')]
        | default('')
      }}
    repo_title: >-
      {{ project_ctx_title }} -
      git cloud env repo [{{ project_ctx_item_label }}]
    repo_main: >-
      {{
        project_env.repos[project_ctx_item.repo | default('')]
        | default({})
      }}
    repo_ssh_src_dir: "{{ project_env_dir }}"
    repo_secrets_dir: "{{ project_ctx_secrets_dir + '/' + project_ctx_item.dir }}"
    repo_default_dir: "{{ project_ctx_cloud_repo_dir + '/' + project_ctx_item.dir }}"
    repo_dev_base_dir: "{{ project_dev_repos_dir }}"
    repo_dev_path: "{{ project_ctx_path_cloud_ext_repo }}"
    repo_dev: "{{ env_dev }}"
    repo_lax: "{{ env_lax }}"
  loop: "{{ project_ctx.ext_repos | default([], true) }}"
  loop_control:
    loop_var: project_ctx_item
    label: "{{ project_ctx_item_label }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_ctx_title }} - collections (parent directories)"
  file:
    path: "{{ (project_ctx_cloud_repo_dir + '/' +  tmp_dest) | dirname }}"
    state: directory
    mode: "{{ tmp_item.dir_mode }}"
  vars:
    tmp_dest: "{{ tmp_item.dest | default('') }}"
  loop: "{{ project_ctx.prepared_collections | default([], true) }}"
  loop_control:
    loop_var: tmp_item
    label: "(parent of) {{ tmp_dest }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print_skipped"]

- name: "{{ project_ctx_title }} - collections (symlinks)"
  file:
    src: "{{ tmp_real_src | default(omit, true) }}"
    dest: "{{ tmp_full_dest }}"
    state: "{{ tmp_item.absent | ternary('absent', 'link') }}"
    mode: "{{ tmp_real_mode | default(omit, true) }}"
  vars:
    tmp_src: "{{ tmp_item.src | default('') }}"
    tmp_dest: "{{ tmp_item.dest | default('') }}"
    tmp_full_src: "{{ project_ctx_cloud_repo_dir }}/{{ tmp_src }}"
    tmp_full_dest: "{{ project_ctx_cloud_repo_dir }}/{{ tmp_dest }}"
    tmp_src_relpath: "{{ tmp_full_src | relpath(tmp_full_dest | dirname) }}"
    tmp_real_src: "{{ tmp_item.absent | ternary('', tmp_src_relpath) }}"
    tmp_real_mode: "{{ tmp_item.absent | ternary('', tmp_item.mode) }}"
    tmp_label: "[src] {{ tmp_src }} - [dest] {{ tmp_dest }}"
    tmp_absent_label: "[absent] {{ tmp_dest }}"
    tmp_real_label: "{{ tmp_item.absent | ternary(tmp_absent_label, tmp_label) }}"
  loop: "{{ project_ctx.prepared_collections | default([], true) }}"
  loop_control:
    loop_var: tmp_item
    label: "{{ tmp_real_label }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print_skipped"]

- name: "{{ project_ctx_title }} - create the ctx directory"
  file:
    path: "{{ project_ctx_base_dir }}"
    state: directory
    mode: "{{ env_lax | bool | ternary('777', '755') }}"
  no_log: "{{ env_no_log }}"

# output vars

- name: "{{ project_ctx_title }} - project_ctx_params (define)"
  set_fact:
    project_ctx_params:
      project: "{{ project_env_init.key }}"
      commit: "{{ project_env_commit }}"
      ctx: "{{ project_ctx_key }}"
      env_dev: "{{ env_dev | bool | ternary('true', 'false') }}"
      env_lax: "{{ env_lax | bool | ternary('true', 'false') }}"
      env_no_log: "{{ env_no_log | bool | ternary('true', 'false') }}"
      ctx_dir: "{{ project_ctx_base_dir }}"
      ctx_dev_dir: >-
        {{ project_dev_repos_dir }}/{{
          project_env_init.project_dir_relpath
        }}/{{ project_ctx_base_dir_rel }}
      env_dir: "{{ project_env_dir }}"
      env_file: "{{ project_env_file }}"
      repo_dir: "{{ project_ctx_cloud_repo_dir }}"
      repo_run_file: "{{ project_ctx_cloud_repo_dir }}/{{ project_ctx.run_file }}"
      vault_file: "{{ project_secrets_ctl_dir }}/vault"
      env_params_file: "{{ project_files_cloud_dir }}/{{ project_env_params_file_rel }}"
      path_map_file: "{{ project_files_cloud_dir }}/{{ project_path_map_file_rel }}"
      dev_repos_dir: "{{ project_dev_repos_dir }}"
      secrets_cloud_dir: "{{ project_secrets_cloud_dir }}"
      secrets_ctx_dir: "{{ project_secrets_cloud_dir }}/ctxs/{{ project_ctx_key }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_ctx_title }} - create the project cloud ctx config file (vars.yml)"
  copy:
    content: "{{ project_ctx_params | to_nice_yaml }}"
    dest: "{{ project_ctx_base_dir }}/vars.yml"
    mode: "{{ env_lax | default(false, true) | bool | ternary('666', '600') }}"
  no_log: "{{ env_no_log }}"

- name: "{{ project_ctx_title }} - project_ctx_params_list - init"
  set_fact:
    project_ctx_params_list: ["#!/bin/bash"]
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_ctx_title }} - project_ctx_params - fill"
  set_fact:
    project_ctx_params_list: >-
      {{
        project_ctx_params_list
        + [
          'export ' + project_ctx_item +
          '=' +
          (project_ctx_params[project_ctx_item] | quote)
        ]
      }}
  loop: "{{ project_ctx_params | dict2items | map(attribute='key') | sort }}"
  loop_control:
    loop_var: project_ctx_item
    label: "{{ project_ctx_item }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ project_ctx_title }} - create the project cloud ctx config file (vars.sh)"
  copy:
    content: "{{ project_ctx_params_list | join('\n') }}"
    dest: "{{ project_ctx_base_dir }}/vars.sh"
    mode: "{{ env_lax | default(false, true) | bool | ternary('666', '600') }}"
  no_log: "{{ env_no_log }}"
