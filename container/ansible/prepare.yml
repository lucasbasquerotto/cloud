- name: Play 01 - Init (Cloud)
  hosts: main
  gather_facts: no
  tasks:
    - name: "[cloud - init] - project_base_title"
      set_fact:
        project_base_title: "[cloud - init]"
        project_base_dir: "{{ tmp_base_dir }}"
        project_keys_file_rel: "files/ctl/vars.yml"
        project_files_cloud_dir_rel: "files/cloud"
        project_files_cloud_dir: "{{ tmp_base_dir }}/files/cloud"
        project_secrets_ctl_dir: "{{ tmp_base_dir }}/secrets/ctl"
        project_secrets_cloud_dir: "{{ tmp_base_dir }}/secrets/cloud"
        project_dev_repos_dir: "{{ tmp_base_dir }}/dev/link"
        project_commit_dir: "{{ tmp_base_dir }}/files/cloud/commit"
      vars:
        tmp_base_dir: "{{ env_project_dir }}"
      tags: ["no_print"]

    - name: "{{ project_base_title }} - load the init environment vars"
      include_vars:
        file: "{{ project_base_dir }}/{{ project_keys_file_rel }}"
        name: project_env_init

    - name: "{{ project_base_title }} - validate the key init parameter"
      fail:
        msg: "project key not specified at {{ project_keys_file_rel }}"
      when: (project_env_init.key | default('')) == ''
      tags: ["no_print"]

    - name: "{{ project_base_title }} - project_title"
      set_fact:
        project_title: "[{{ project_env_init.key }}] {{ project_base_title }}"
        env_dev: "{{ tmp_dev }}"
        env_lax: "{{ project_env_init.lax | default(tmp_dev, true) }}"
        env_no_log: "{{ project_env_init.no_log | default(false, true) }}"
      vars:
        tmp_dev: "{{ project_env_init.dev | default(false, true) }}"
      tags: ["no_print"]

    - name: "{{ project_title }} - validate the repo init parameters"
      fail:
        msg: "{{ project_item }} not specified at {{ project_keys_file_rel }} under repo"
      when: (project_env_init.repo[project_item] | default('')) == ''
      loop:
        - "src"
        - "version"
      loop_control:
        loop_var: project_item
      no_log: "{{ env_no_log }}"

    # env repository

    - name: "{{ project_title }} - project_env_title"
      set_fact:
        project_env_title: "{{ project_title }} - environment"
      tags: ["no_print"]

    - name: "{{ project_env_title }} - env - repo (outer)"
      include_tasks: "tasks/util/repo.yml"
      vars:
        repo_title: "{{ project_env_title }} - env - repo"
        repo_main: "{{ project_env_init.repo }}"
        repo_ssh_src_dir: "{{ project_secrets_ctl_dir }}"
        repo_secrets_dir: "{{ project_secrets_ctl_dir }}"
        repo_default_dir: "{{ project_base_dir }}/env"
        repo_dev_base_dir: "{{ project_dev_repos_dir }}"
        repo_dev_path: "{{ project_env_init.path_params.path_env | default('') }}"
        repo_dev: "{{ env_dev }}"
        repo_lax: "{{ env_lax }}"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    - name: "{{ project_env_title }} - project_env_dir"
      set_fact:
        project_env_dir: "{{ repo_dir }}"
        project_env_file: "{{ repo_dir }}/{{ project_env_init.repo.env_file }}"
        project_env_commit: "{{ repo_git_result.after }}"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    - name: "{{ project_env_title }} - load the environment vars"
      include_vars:
        file: "{{ project_env_file }}"
        name: project_env_aux
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    - name: "{{ project_env_title }} - project_env"
      set_fact:
        project_env: "{{ project_env_aux }}"
        project_env_original: "{{ project_env_aux }}"
        project_env_has_original: false
      vars:
        project_name: "{{ project_env_init.key }}"
        project_ctxs: "{{ project_env_init.ctxs | default([]) }}"
        params: "{{ project_env_init.env_params | default({}) }}"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    - name: "{{ project_env_title }} - validate ctl env (env vars)"
      lrd.cloud.schema:
        schema_file: "{{ project_env_dir }}/{{ project_env.ctl_env_schema | default('') }}"
        value: "{{ project_env_init.env_params | default({}) }}"
      when: (project_env.ctl_env_schema | default('')) != ''
      no_log: "{{ env_no_log }}"

    # env base repository

    - block:
        - name: "{{ project_env_title }} - validate env base destination"
          fail:
            msg: "{{ project_env_title }} - git env base destination not defined"
          when: (project_env.env.repo_dir | default('')) == ''
          no_log: "{{ env_no_log }}"
          tags: ["no_print"]

        - name: "{{ project_env_title }} - set_fact - project_env_base_dir"
          set_fact:
            project_env_base_dir: "{{ project_env_dir + '/' + project_env.env.repo_dir }}"
            project_env_has_original: true
          no_log: "{{ env_no_log }}"
          tags: ["no_print"]

        - name: "{{ project_env_title }} - env base - repo (outer)"
          include_tasks: "tasks/util/repo.yml"
          vars:
            repo_title: "{{ project_env_title }} - env base - repo"
            repo_main: "{{ project_env.env.repo }}"
            repo_ssh_src_dir: "{{ project_env_dir }}"
            repo_secrets_dir: "{{ project_secrets_ctl_dir }}/env-base"
            repo_default_dir: "{{ project_env_base_dir }}"
            repo_dev_base_dir: "{{ project_dev_repos_dir }}"
            repo_dev_path: "{{ project_env_init.path_params.path_env_base | default('') }}"
            repo_dev: "{{ env_dev }}"
            repo_lax: "{{ env_lax }}"
          no_log: "{{ env_no_log }}"
          tags: ["no_print"]

        - name: "{{ project_env_title }} - load the base environment vars"
          include_vars:
            file: "{{ project_env_base_dir }}/{{ project_env.env.file }}"
            name: project_env_base
          no_log: "{{ env_no_log }}"

        - name: "{{ project_env_title }} - project_env (from base)"
          set_fact:
            project_env: "{{ project_env_base }}"
          vars:
            project_name: "{{ project_env.name | default('') }}"
            project_ctxs: "{{ project_env.ctxs | default([]) }}"
            env: "{{ project_env.env | default({}) }}"
            params: "{{ project_env.params | default({}) }}"
            credentials: "{{ project_env.credentials | default({}) }}"
          no_log: "{{ env_no_log }}"

      when: project_env.env is defined
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    # project data (from env)

    - name: "{{ project_title }} - generate the project data"
      set_fact:
        project_data: >-
          {{
            lookup(
              'lrd.cloud.project',
              project_env,
              env_init=project_env_init,
              env_original=project_env_original,
              env_info=tmp_info
            )
          }}
        project_ctxs_title: "{{ project_title }} - ctxs"
      vars:
        tmp_info:
          env_lax: "{{ env_lax | bool }}"
          env_dev: "{{ env_dev | bool }}"
          env_dir: "{{ project_env_dir }}"
          has_original_env: "{{ project_env_has_original | bool }}"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    - name: "{{ project_title }} - project_env_params and project_path_map_repos"
      set_fact:
        project_env_params: "{{ project_env_init.env_params | default({}) }}"
        project_env_params_file_rel: "env-params.yml"
        project_path_map_repos: "{{ project_env_init.path_params.path_map_repos | default({}) }}"
        project_path_map_file_rel: "path-map.yml"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]

    # project files and directories

    - name: "{{ project_title }} - create the project directories"
      file:
        path: "{{ project_item }}"
        state: directory
        mode: "{{ env_lax | bool | ternary('777', '755') }}"
      loop:
        - "{{ project_commit_dir }}"
        - "{{ project_files_cloud_dir }}"
      loop_control:
        loop_var: project_item
      no_log: "{{ env_no_log }}"

    - name: "{{ project_title }} - create the project files"
      copy:
        content: "{{ project_item.content | default(omit, true) }}"
        src: "{{ project_item.src | default(omit, true) }}"
        dest: "{{ project_item.dest }}"
        mode: "{{ project_item.mode }}"
      loop:
        - content: |
            #!/bin/bash
            export commit={{ project_env_commit | quote }}
          dest: "{{ project_commit_dir }}/current"
          mode: "{{ env_lax | bool | ternary('777', '755') }}"
        - src: "files/ssh.sh"
          dest: "{{ project_files_cloud_dir }}/ssh"
          mode: "{{ env_lax | bool | ternary('777', '755') }}"
        - src: "files/run-ctxs.sh"
          dest: "{{ project_files_cloud_dir }}/run-ctxs"
          mode: "{{ env_lax | bool | ternary('777', '755') }}"
        - content: "{{ project_env_params | to_nice_yaml }}"
          dest: "{{ project_files_cloud_dir }}/{{ project_env_params_file_rel }}"
          mode: "{{ env_lax | default(false, true) | bool | ternary('666', '600') }}"
        - content: "{{ project_path_map_repos | to_nice_yaml }}"
          dest: "{{ project_files_cloud_dir }}/{{ project_path_map_file_rel }}"
          mode: "{{ env_lax | default(false, true) | bool | ternary('666', '600') }}"
      when: project_item.when | default(true) | bool
      loop_control:
        loop_var: project_item
        label: "{{ project_item.dest }}"
      no_log: "{{ env_no_log }}"

    # vars file (used to run the contexts and ssh file)

    - name: "{{ project_title }} - create the vars file at {{ project_files_cloud_dir }}/"
      template:
        src: "files/vars.tpl.sh"
        dest: "{{ project_files_cloud_dir }}/vars.sh"
        mode: "{{ env_lax | bool | ternary('666', '640') }}"
      vars:
        project_vars_title: "{{ project_title }}"
        project_vars_ctxs: "{{ project_env.ctxs }}"
        project_vars_files_cloud_dir: "{{ project_files_cloud_dir }}"
        project_vars_secrets_cloud_dir: "{{ project_secrets_cloud_dir }}"
        project_vars_default_ctx: "{{ project_data.default_ctx | default('') }}"
        project_vars_default_node: "{{ project_data.default_node | default('') }}"
      no_log: "{{ env_no_log }}"

    # ctxs

    - name: "{{ project_ctxs_title }} (main)"
      include_tasks: "ctx.yml"
      vars:
        project_ctx_key: "{{ project_ctx.name }}"
        project_ctx_title: "{{ project_ctxs_title }} [{{ project_ctx_key }}]"
      loop: "{{ project_data.prepared_ctxs }}"
      loop_control:
        loop_var: project_ctx
        label: "{{ project_ctx_key }}"
      no_log: "{{ env_no_log }}"
      tags: ["no_print"]
