# Node Params

- name: "{{ cron_title }} - cron_node_params"
  set_fact:
    cron_node_params: "{{ cron_node.params | default({}) }}"
    cron_node_transfer_input: >-
      {{
        cron_node.general_data
        | combine({ 'dependencies': tmp_dependencies })
      }}
  vars:
    tmp_dependencies: >-
      {{ ctx_node_dependencies[cron_node.name] | default({}) }}
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

# Cron Item

- name: "{{ cron_title }} - cron list (outer)"
  include_tasks: "cron_transfer.yml"
  vars:
    cron_transfer_become: "{{ (cron_item.user | default('')) == 'root' }}"
    cron_transfer_src: "{{ cron_item.src }}"
    cron_transfer_dest: "{{ cron_item.dest }}"
    cron_transfer_user: "{{ cron_item.user | default('') }}"
    cron_transfer_group: "{{ cron_item.group | default(cron_transfer_user, true) }}"
    cron_transfer_title: "{{ cron_title }} - transfer cron file [{{ cron_transfer_dest }}]"
  loop: "{{ cron_node.cron_transfer | default([]) | list }}"
  loop_control:
    loop_var: cron_item
    label: "{{ cron_transfer_dest }}"
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

# Cron - Start

- name: "{{ cron_title }} - ensure cron is running"
  become: true
  service:
    name: cron
    state: started
  when: >-
    (cron_node_params.cron_start | default(true) | bool)
    and
    ((cron_node_params.cron | default([]) | list | length) > 0)
  no_log: "{{ env_no_log }}"
