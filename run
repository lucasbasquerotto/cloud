#!/bin/bash
set -eou pipefail

RED='\033[0;31m'
NC='\033[0m' # No Color

function error {
	msg="$(date '+%F %T') - ${BASH_SOURCE[0]}: line ${BASH_LINENO[0]}: ${*}"
	>&2 echo -e "${RED}${msg}${NC}"
	exit 2
}

ctx_dir="$1"

vars_file_shell="$ctx_dir/vars.sh"
vars_file_yaml="$ctx_dir/vars.yml"

shift;

debug=()

# shellcheck disable=SC2214
while getopts ':fps-:' OPT; do
	if [ "$OPT" = "-" ]; then   # long option: reformulate OPT and OPTARG
		OPT="${OPTARG%%=*}"       # extract long option name
		OPTARG="${OPTARG#$OPT}"   # extract long option argument (may be empty)
		OPTARG="${OPTARG#=}"      # if long option argument, remove assigning `=`
	fi
	case "$OPT" in
		f|force ) force='true';;
		p|prepare ) prepare='true';;
		s|fast ) fast='true';;
		end ) end='true';;
		debug ) debug=( "-vvvvv" );;
		\? ) error "[error] unknown short option: -${OPTARG:-}";;
		?* ) error "[error] unknown long option: --${OPT:-}";;
	esac
done
shift $((OPTIND-1))

# shellcheck source=./files/vars.sample.sh
. "$vars_file_shell"

vault=()

var_vault_file="$vault_file"
var_repo_dir="$repo_dir"
var_secrets_ctx_dir="$secrets_ctx_dir"

if [ -f "$var_vault_file" ]; then
    vault=( '--vault-id' "$var_vault_file" )
elif [ "${FORCE_VAULT:-}" = 'true' ]; then
    vault=( '--vault-id' 'cloud@prompt')
fi

cd "$var_repo_dir"

prepare_args=()
skip=''
fast_prepare=''

if [ "${prepare:-}" = 'true' ]; then
	if [ "${1:-}" = "--skip" ]; then
		skip='true';
		shift;
	else
		if [ "${fast:-}" = 'true' ]; then
			fast_prepare='true'
		fi

		for arg in "$@"; do
			shift;

			if [ "$arg" = "--" ]; then
				break;
			fi

			prepare_args+=( "$arg" )
		done
	fi
fi

if [ "${fast:-}" = 'true' ] && [ "${fast_prepare:-}" != 'true' ]; then
	echo "[cloud] skipping prepare project context (fast)..."
else
	if [ "$skip" = 'true' ]; then
		echo "[cloud] skipping prepare project context (skip)..."
	else
		# Prepare the cloud context
		ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook \
			${vault[@]+"${vault[@]}"} \
			${debug[@]+"${debug[@]}"} \
			-i ansible/prepare.hosts \
			-e env_vars_file="$vars_file_yaml" \
			-e env_fast_prepare="$fast_prepare" \
			prepare.ctx.yml \
			${prepare_args[@]+"${prepare_args[@]}"} \
			|| error "[error] prepare ctx"
	fi
fi

if [ "${prepare:-}" = 'true' ]; then
	echo "[cloud] skipping execute project context (prepare)..."
else
	other_args=()

	if [ "${end:-}" = 'true' ]; then
		other_args+=( '--tags=destroy' )
	fi

	if [ "${force:-}" = 'true' ]; then
		other_args+=( '-e env_force=true' )
	fi

    # Execute the cloud context
    ANSIBLE_CONFIG="ansible/ansible.generated.cfg" ansible-playbook \
        ${vault[@]+"${vault[@]}"} \
        ${debug[@]+"${debug[@]}"} \
        ${other_args[@]+"${other_args[@]}"} \
        -i "$var_secrets_ctx_dir/hosts" \
        -e env_vars_file="$vars_file_yaml" \
        main.yml "${@}" || error "[error] run ctx"
fi